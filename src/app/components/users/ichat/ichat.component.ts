import { Component } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { CommonModule } from '@angular/common';

@Component({
  selector: 'app-ichat',
  standalone: true,
  imports: [FormsModule, CommonModule],
  templateUrl: './ichat.component.html',
  styleUrls: ['./ichat.component.scss'],
})
export class IchatComponent {
  message: string = '';

  // Ejemplo de contactos
  contacts = [
    {
      name: 'Juan',
      lastMessage: 'Hola, Â¿cÃ³mo estÃ¡s?', // Ãšltimo mensaje (puede ser enviado o recibido)
      lastMessageTime: '10:30 AM', // Hora del Ãºltimo mensaje
      unreadCount: 0, // NÃºmero de mensajes no leÃ­dos (sÃ³lo si el remitente es otro contacto)
    },
    {
      name: 'Ana',
      lastMessage: 'Â¿Vamos a la reuniÃ³n?',
      lastMessageTime: '10:00 AM',
      unreadCount: 2,
    },
    {
      name: 'Dulce',
      lastMessage: 'Quiero Dulces ðŸ˜€',
      lastMessageTime: 'Ayer',
      unreadCount: 2,
    },
  ];

  // Mensajes del chat actual
  messages = [
    { type: 'received', text: 'Hola, Â¿cÃ³mo estÃ¡s?', time: '10:30 AM' },
    { type: 'sent', text: 'Â¡Bien! Â¿Y tÃº?', time: '10:31 AM' },
    { type: 'received', text: 'Me alegro mucho', time: '12:05 PM' },

  ];

  // Mensaje nuevo
  newMessage: string = '';

  // FunciÃ³n para enviar mensaje
  sendMessage() {
    if (this.newMessage.trim() !== '') {
      this.messages.push({
        type: 'sent', // Define que el mensaje es enviado
        text: this.newMessage,
        time: new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }),
      });
      this.newMessage = ''; // Limpiar el campo de entrada despuÃ©s de enviar el mensaje
    }
  }
}
